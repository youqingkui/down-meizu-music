// Generated by CoffeeScript 1.8.0
(function() {
  var Music, async, cheerio, fs, request;

  request = require("request");

  async = require("async");

  cheerio = require("cheerio");

  fs = require("fs");

  Music = function(url) {
    this.url = url;
    this.songs = [];
    this.album = 'youqing';
    this.artist = 'youqing';
    this.song_name = '';
    this.image_url = '';
    this.song_url = '';
    this.songDownUrl = '';
  };

  Music.prototype.getUrlInfo = function() {
    var self;
    self = this;
    return async.series([
      function(cb) {
        return request.get(self.url, function(err, res, body) {
          var $, songs_text;
          if (err) {
            return console.log(err);
          }
          $ = cheerio.load(body);
          songs_text = $('script:contains("songs")').text();
          self.songs = eval(songs_text);
          return cb();
        });
      }, function(cb) {
        return async.eachSeries(this.songs, function(item, callback) {
          self.album = item.url;
          self.artist = item.artist;
          self.image_url = item.image;
          self.song_url = item.url;
          self.song_name = item.title;
          return self.createAlbumFolder(callback);
        });
      }
    ]);
  };

  Music.prototype.createAlbumFolder = function(cb) {
    var self;
    self = this;
    if (!fs.existsSync(self.album)) {
      fs.mkdirSync(self.album);
    }
    return self.downAlbumImage(cb);
  };

  Music.prototype.downAlbumImage = function(cb) {
    var self, writeImg;
    self = this;
    writeImg = fs.createWriteStream(self.album + '/' + self.album + ".jpg");
    return request.get(self.image_url).on('response', function(res) {
      console.log(".................................");
      console.log("" + self.album + "  " + self.image_url);
      console.log(res.statusCode);
      if (res.statusCode === 200) {
        return console.log('连接下载专辑图片成功');
      }
    }).on("error", function(err) {
      console.log("" + self.album + "  " + self.image_url + " down error: " + err);
      return console.log("下载专辑图片失败");
    }).on('end', function() {
      console.log("" + self.album + " 图片下载成功");
      console.log(".................................\n");
      return cb();
    }).pipe(writeImg);
  };

  Music.prototype.getSongUrl = function(cb) {
    var comUrl, host, self;
    self = this;
    host = 'http://music.meizu.com';
    comUrl = host + self.song_url;
    return request.get(comUrl, function(err, res, body) {
      var data;
      if (err) {
        return console.log(err);
      }
      data = JSON.parse(body);
      if (data.code !== 200) {
        return "获取下载错误200";
      }
      self.songDownUrl = data.value.url;
      return cb();
    });
  };

  Music.prototype.downSong = function(cb) {
    var self, writeSong;
    self = this;
    writeSong = fs.createWriteStream(self.album + '/' + self.song_name + ".m4a");
    return request.get(self.downSong()).on('response', function(res) {
      console.log(".................................");
      console.log("" + self.album + "  " + self.image_url);
      console.log(res.statusCode);
      if (res.statusCode === 200) {
        return console.log('连接下载歌曲成功');
      }
    }).on("error", function(err) {
      console.log("" + self.album + "  " + self.image_url + " down error: " + err);
      return console.log("下载专歌曲失败");
    }).on('end', function() {
      console.log("" + self.album + " 歌曲下载成功");
      console.log(".................................\n");
      return cb();
    }).pipe(writeSong);
  };

}).call(this);

//# sourceMappingURL=old.js.map
