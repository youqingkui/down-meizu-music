// Generated by CoffeeScript 1.8.0
(function() {
  var Music, async, cheerio, fs, music, request;

  request = require("request");

  async = require("async");

  cheerio = require("cheerio");

  fs = require("fs");

  Music = (function() {
    function Music(url) {
      this.url = url;
      this.songs = [];
      this.album = 'youqing';
      this.artist = 'youqing';
      this.headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.81 Safari/537.3'
      };
    }

    Music.prototype.getUrlInfo = function(cb) {
      var getJSON, getSongsInfo, self;
      self = this;
      return async.waterfall([
        getJSON = function(callback) {
          var op;
          op = {
            url: self.url,
            headers: self.headers
          };
          return request.get(op, function(err, res, body) {
            var $, jsonSongs, songs_text;
            if (err) {
              return console.log(err);
            }
            $ = cheerio.load(body);
            songs_text = $('script:contains("songs")').text();
            jsonSongs = eval(songs_text);
            return callback(null, jsonSongs);
          });
        }, getSongsInfo = function(songs, callback) {
          songs.forEach(function(item) {
            var tmp;
            tmp = {};
            tmp.title = item.title;
            tmp.url = item.url;
            return self.songs.push(tmp);
          });
          return cb();
        }
      ]);
    };

    Music.prototype.getSongUrl = function(cb) {
      var bashUrl, self;
      self = this;
      bashUrl = 'http://music.meizu.com';
      return async.eachSeries(self.songs, function(item, callback) {
        var url;
        url = bashUrl + item.url;
        return request.get(url, function(err, res, body) {
          var data;
          if (err) {
            return console.log(err);
          }
          data = JSON.parse(body);
          if (data.code !== 200) {
            return console.log("获取下载错误200", data);
          }
          item.downUrl = data.value.url;
          item.ext = data.value.format;
          return callback();
        });
      }, function() {
        return cb();
      });
    };

    Music.prototype.downSongs = function(cb) {
      var self;
      self = this;
      return async.eachSeries(self.songs, function(item, callback) {
        return self.downSong(item, callback);
      }, function() {
        return console.log("all down");
      });
    };

    Music.prototype.downSong = function(info, cb) {
      var self, writeSong;
      self = this;
      writeSong = fs.createWriteStream(self.album + '/' + info.title + '.' + info.ext);
      return request.get(info.downUrl).on('response', function(res) {
        console.log(".................................");
        console.log("" + self.album + "  " + info.downUrl);
        console.log(res.statusCode);
        if (res.statusCode === 200) {
          return console.log('连接下载歌曲成功');
        }
      }).on("error", function(err) {
        console.log("" + self.album + "  " + info.downUrl + " down error: " + err);
        return console.log("下载歌曲失败");
      }).on('end', function() {
        console.log("" + self.album + " " + info.title + " 歌曲下载成功");
        console.log(".................................\n");
        return cb();
      }).pipe(writeSong);
    };

    Music.prototype.createAlbumFolder = function(cb) {
      var self;
      self = this;
      if (!fs.existsSync(self.album)) {
        fs.mkdirSync(self.album);
      }
      return cb();
    };

    return Music;

  })();

  music = new Music('http://music.meizu.com/share/distribute.do?style=2&id=2406399&type=2&source=2&token=0f72e10819af1f35f9a90a053b9cc9f3');

  async.series([
    function(cb) {
      return music.getUrlInfo(cb);
    }, function(cb) {
      return music.createAlbumFolder(cb);
    }, function(cb) {
      return music.getSongUrl(cb);
    }, function(cb) {
      return music.downSongs(cb);
    }
  ]);

}).call(this);

//# sourceMappingURL=app2.js.map
